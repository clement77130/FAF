generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../data/database.db"
}

model Guild {
  id               String    @id
  welcomeChannelId String?
  logChannelId     String?
  ticketCategoryId String?
  moderationRoles  String    @default("[]")
  giveaways       Giveaway[]
  tickets         Ticket[]
  invites         Invite[]
}

model Invite {
  id        String   @id
  guildId   String
  inviterId String
  uses      Int      @default(0)
  left      Int      @default(0)
  fake      Int      @default(0)
  bonus     Int      @default(0)

  guild     Guild    @relation(fields: [guildId], references: [id])
  members   MemberJoin[]

  @@unique([id, guildId])
}

model MemberJoin {
  memberId  String
  guildId   String
  inviteId  String
  joinedAt  DateTime @default(now())

  invite    Invite   @relation(fields: [inviteId, guildId], references: [id, guildId])

  @@id([memberId, guildId])
  @@index([inviteId, guildId])
}

model Ticket {
  id         String   @id
  guildId    String
  userId     String
  channelId  String
  category   String
  status     String   @default("open")
  createdAt  DateTime @default(now())
  guild      Guild    @relation(fields: [guildId], references: [id])
}

model Giveaway {
  id           String                @id
  guildId      String
  channelId    String
  messageId    String
  prize        String
  description  String
  winners      Int
  endTime      DateTime
  hostId       String
  ended        Boolean               @default(false)
  guild        Guild                 @relation(fields: [guildId], references: [id])
  participants GiveawayParticipant[]
}

model GiveawayParticipant {
  id          String   @id @default(cuid())
  giveawayId  String
  userId      String
  giveaway    Giveaway @relation(fields: [giveawayId], references: [id])
}